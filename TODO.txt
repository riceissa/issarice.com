Possible list of things to write about:

- wordpress
- high school
- peter thiel, elon musk, travis kalanick, jeff bezos, mark zuckerberg
- bertrand russell
- dating and relationships
- the value of books
- how to write
- gender (evo bio)
- feminism (logical argument)
- nice guys
- race
- libertarianism
- communism (Marxians)
- neoreactionaries
- Freud
- the difference between "knowing about a topic" and "knowing what experts/the mainstream think about a topic"
- Japanese literature
    - oe kenzaburo (UC Berkeley lecture on A Personal Matter by John Wallace(?))

NEW:

- decide what to do about the problem of adding multiple languages/other parameters.
  right now the structure is flat, i.e. everything comes after issarice.com/ . But what if we have another language, and want to have pagename1 for both languages (maybe they are even the exact same word in each language).
  One solution is subdomains, but this is a bit tricky if one wants to have a locally-generated site. We could also do something like issarice.com/wiki/en/pagename1 for the english page, but then this breaks compatibility with what already exists. One solution is to have all the main pages flat (which are english for the time being), but then have a few "blacklisted" pages that cannot be created. This is already the case with "tags", "images" (though this one isn't really true, since images are added to the flat issarice.com/ ), "static".
  We could then add to this blacklist e.g. single alpha characters a..z, which we can use for further things.
  Like 'c' could stand for "content", so we could then just have issarice.com/c/wiki/en/pagename1, for instance. Then still the most obvious place to go (which is issarice.com/pagename1) will work, while the more "logical" placement will also work.
- write a "plugin feature" so it's easier to add things later??
- go through generator.py, metadata.py, and commands.py (and maybe also
  tag_ontology.py) to document code.
- use classes instead of purely procedural stuff (do this slowly)

- efficiency?? -- right now, it takes about 30 seconds to process all
  files. It used to be that generator.py took 9 seconds while hakyll
  took about 6 (+4 for compiling site.hs). But generator.py does a lot
  more tag processing, so maybe speed isn't really a concern. Now
  generator.py makes a sitemap as well.  30 *is* slow, but the --files
  flag allows for partial compilation (something I didn't see in Jekyll
  or Hakyll), which means I can quickly check the output of the file I
  am editing.  I do want to work on this though to make it run faster.

- fix slugification method... (right now i think it fails for japanese characters, for example, as well as accented latin characters. also consider switching to wikipedia-style Cool URIs.)

OLD:

- figure out why LaTeX code blocks aren't highlighting
- import remaining pages from github pages site. & add more notes files.
- decide what to do about image/pdf hosting (just outsource? .. to WP or
  flickr)
- on tags, show the number of items in each tag in parentheses
