{{TipImported
|id=312
|previous=311
|next=313
|created=August 13, 2002
|complexity=intermediate
|author=
|version=6.0
|rating=688/270
|category1=Getting started
|category2=
}}
Here is how to cut-and-paste or copy-and-paste text using a visual selection in Vim. See [[Cut/copy and paste using visual selection]] for the main article.

'''Cut and paste:'''
#Position the cursor where you want to begin cutting.
#Press <code>v</code> to select characters (or uppercase <code>V</code> to select whole lines, or <code>Ctrl-v</code> to select rectangular blocks).
#Move the cursor to the end of what you want to cut.
#Press <code>d</code> to cut (or <code>y</code> to copy).
#Move to where you would like to paste.
#Press <code>P</code> to paste before the cursor, or <code>p</code> to paste after.

'''Copy and paste''' is performed with the same steps except for step 4 where you would press <code>y</code> instead of <code>d</code>:
*<code>d</code> stands for ''delete'' in Vim, which in other editors is usually called ''cut''
*<code>y</code> stands for ''yank'' in Vim, which in other editors is usually called ''copy''

==Copying and cutting in normal mode==

In normal mode, one can copy (yank) with <code>y{motion}</code>, where <code>{motion}</code> is a Vim motion. For example, <code>yw</code> copies to the beginning of the next word. Other helpful yanking commands include:

*<code>yy</code> or <code>Y</code> – yank the current line, including the newline character at the end of the line
*<code>y$</code> – yank to the end of the current line (but don't yank the newline character); note that many people like to remap <code>Y</code> to <code>y$</code> in line with <code>C</code> and <code>D</code>
*<code>yiw</code> – yank the current word (excluding surrounding whitespace)
*<code>yaw</code> – yank the current word (including leading or trailing whitespace)

Cutting can be done using <code>d{motion}</code>.

==Pasting in normal mode==

In normal mode, one can use <code>p</code> to paste after the cursor, or <code>P</code> to paste before the cursor.

The variants <code>gp</code> and <code>gP</code> move the cursor after the pasted text, instead of leaving the cursor stationary.

To select a register from which to paste, one can use <code>"{register}p</code> to paste from the register <code>{register}</code>. See [[Pasting registers]] for more information.

==Copying and cutting in command-line mode==

To copy text in command-line mode, one must first open the command-line window with <code><C-f></code>. After this, one can copy as in normal mode.

==Pasting in command-line mode==

There are two approaches to pasting in command-line mode. The first is to open the command-line window with <code><C-f></code>, and then paste as in normal mode.

The second approach is to use <code><C-r>{register}</code> to paste the contents of the register <code>{register}</code>. In particular, <code><C-r>"</code> pastes from the default register (so the same as <code>p</code> in normal mode). See [[Pasting registers]] for more information.

==Copy, cut, and paste from the system clipboard==
''Main article: [[Accessing the system clipboard]]''

Unlike most text editors, Vim distinguishes between its own registers and the system clipboard. By default, Vim copies to, cuts to, and pastes from its own default register, called the ''unnamed register'' (<code>""</code>, also called [http://vimdoc.sourceforge.net/htmldoc/change.html#quote_quote quotequote]) instead of the system clipboard.

Assuming Vim was compiled with clipboard access, it is possible to access the <code>"+</code> or <code>"*</code> registers, which can modify the system clipboard. In this case, one can copy with e.g. <code>"+y</code> in visual mode, or <code>"+y{motion}</code> in normal mode, and paste with e.g. <code>"+p</code>.

If your installation of Vim was not compiled with clipboard support, you must either install a package that has clipboard support, or use an external command such as xclip as an intermediary. See [[Accessing the system clipboard]] for detailed information.

==Multiple copying==
''Main article: [[Pasting registers]].''

Deleted or copied text is placed in the unnamed register. If wanted, a register can be specified so the text is also copied to the named register. A register is a location in Vim's memory identified with a single letter. A double quote character is used to specify that the next letter typed is the name of a register.

For example, you could select the text <code>hello</code> then type <code>"ay</code> to copy "hello" to the <code>a</code> register. Then you could select the text <code>world</code> and type <code>"by</code> to copy "world" to the <code>b</code> register. After moving the cursor to another location, the text could be pasted: type <code>"ap</code> to paste "hello" or <code>"bp</code> to paste "world". These commands paste the text after the cursor. Alternatively, type <code>"aP</code> or <code>"bP</code> to paste before the cursor.

===Windows clipboard===
When using Vim under Windows, the clipboard can be accessed with the following:
*In step 4, press Shift+Delete to cut or Ctrl+Insert to copy.
*In step 6, press Shift+Insert to paste.

===Different instances===
How does one copy and paste between two instances of Vim on different Linux consoles?

After copying text, open a new buffer for a new file:
 :e ~/dummy

*Paste the text to the new buffer.
*Write the new buffer {{Code|:w}}.
*Switch to the previous buffer {{Code|:bp}} to release *.swp.
*Now switch to the other console.
*Put the cursor at the desired place.
*Read the dummy file {{Code|:r ~/dummy}}

==Increasing the buffer size==
By default, only the first 50 lines in a register are saved, and a register is not saved if it contains more than 10 kilobytes. {{help|'viminfo'}}

In the example below, the first line displays the current settings, while the second line sets:
*<code>'100</code> [[Using marks|Marks]] will be remembered for the last 100 edited files.
*<code><100</code> Limits the number of lines saved for each register to 100 lines; if a register contains more than 100 lines, only the first 100 lines are saved.
*<code>s20</code> Limits the maximum size of each item to 20 kilobytes; if a register contains more than 20 kilobytes, the register is not saved.
*<code>h</code> Disables [[Highlight all search pattern matches|search highlighting]] when Vim starts.
<pre>
:set viminfo?
:set viminfo='100,<100,s20,h
</pre>

==See also==
* [[VimTip356|Quick yank and paste]]
* [[Cut/copy and paste using visual selection]]
* [[In line copy and paste to system clipboard]]
* [[Accessing the system clipboard]]

==Comments==

